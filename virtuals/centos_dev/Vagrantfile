# -*- mode: ruby -*-
# vi: set ft=ruby :

# CentOS Development VM Configuration
# This VM uses CentOS 8 with development tools

Vagrant.configure("2") do |config|
  # VM configuration
  config.vm.box = "centos/8"
  config.vm.hostname = "simple-nfsd-centos-dev"
  
  # Network configuration
  config.vm.network "private_network", ip: "192.168.1.101"
  
  # VM resources
  config.vm.provider "virtualbox" do |vb|
    vb.name = "simple-nfsd-centos-dev"
    vb.memory = "2048"
    vb.cpus = 2
    vb.gui = false  # Use headless mode
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    vb.customize ["modifyvm", :id, "--vrde", "off"]  # Disable VRDE for headless
  end
  
  # Provisioning with Ansible
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "../../automation/playbook.yml"
    ansible.inventory_path = "../../automation/inventory.ini"
    ansible.limit = "development"
    ansible.extra_vars = {
      git_repo_url: ".",
      git_branch: "main"
    }
    ansible.verbose = true
  end
  
  # Shared directories for development
  config.vm.synced_folder "../../", "/vagrant", type: "rsync", 
    rsync__exclude: [".git/", "dist/", "*.o", "*.so", "*.a", "virtuals/", ".vagrant/"]
  
  # Application source code (read-write for development)
  config.vm.synced_folder "../../src", "/opt/simple-nfsd/src", type: "rsync"
  config.vm.synced_folder "../../include", "/opt/simple-nfsd/include", type: "rsync"
  config.vm.synced_folder "../../tests", "/opt/simple-nfsd/tests", type: "rsync"
  config.vm.synced_folder "../../config", "/opt/simple-nfsd/config", type: "rsync"
  
  # Build directory (read-write for build artifacts)
  config.vm.synced_folder "../../build", "/opt/simple-nfsd/build", type: "rsync"
  
  # Post-provisioning script
  config.vm.provision "shell", inline: <<-SHELL
    # Create log directories
    sudo mkdir -p /var/log/simple-nfsd
    sudo chown nfsdev:nfsdev /var/log/simple-nfsd
    
    # Create configuration directory
    sudo mkdir -p /etc/simple-nfsd
    sudo chown nfsdev:nfsdev /etc/simple-nfsd
    
    # Enable and start services
    sudo systemctl enable simple-nfsd
    sudo systemctl start simple-nfsd
    
    # Show status
    echo "=== Simple NFS Daemon Status ==="
    sudo systemctl status simple-nfsd --no-pager
    echo ""
    echo "=== Test Results ==="
    cd /opt/simple-nfsd/build && sudo -u nfsdev make test
  SHELL
end
